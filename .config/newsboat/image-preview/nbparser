#!/bin/sh

PUP='/usr/bin/pup' # You may need to change this

rm /tmp/addToDisplay 1>/dev/null 2>/dev/null
rm /tmp/addToDisplayNoPic 1>/dev/null 2>/dev/null
cd /tmp

LINES=$(tput lines)
COLUMNS=$(tput cols)
FONTH=10 # Size of one terminal row
FONTW=10  # Size of one terminal column

calculateWH(){
    imgPath=$1
    width=$(identify -format '%w' "$imgPath")
    height=$(identify -format '%h' "$imgPath")
    max_width=$(( $FONTW * $COLUMNS ))
    max_height=$(( $FONTH * $(( $LINES - 2 )) )) # substract one line for prompt
    if test $width -gt $max_width; then
        height=$(($height * $max_width / $width))
        width=$max_width
    fi   
    if test $height -gt $max_height; then
        width=$(($width * $max_height / $height))
        height=$max_height
    fi
    echo "$width" "$height"
}

lineNr=1
while read line; do
    if [[ "$line" =~ "https://pbs.twimg.com/media/" ]]; then
		echo "<p> $line </p>" >> /tmp/infoHeader
    	# TWITTER PIC
		url=$(echo $line | sed 's;.*Podcast Download URL: https://pbs.twimg.com/media/;;')
		if ! [[ -z $url ]]; then
			imgfile=$((wget -nc "https://pbs.twimg.com/media/$url") 2>&1 | grep "saved" | sed 1q | awk '{print $6}')
			read img_width img_height < <(calculateWH "/tmp/$url")
			echo "<p>Image Loaded.</p>" >> /tmp/addToDisplay
			echo "<img src='/tmp/$url' alt='Twitter-Img' width='$img_width px' height='$img_height px'>" | sed 's/‘//g' | sed 's/’//g' >> /tmp/addToDisplay
		fi
	elif [[ "$line" =~ "https://nitter.net/pic" ]]; then
		echo "<p> $line </p>" >> /tmp/infoHeader
    	# NITTER PIC (Nitter is how I read twitter.)
		url=$(echo $line | $PUP 'img attr{src}' | sed 's;.*https://nitter.net/pic/;;')
		regexNoImgTag=$(echo $line | $PUP 'img')
		regexNoImgTag=${regexNoImgTag//"/"/"\/"}
		regexNoImgTag=${regexNoImgTag//">"/" \/>"}
		echo $regexNoImgTag > /tmp/asd
		line=$(echo $line | sed "s/$(echo $regexNoImgTag)//")
		#if ! [[ -z $url ]]; then
			#imgfile=$((wget -nc "https://nitter.net/pic/$url") 2>&1 | grep "saved" | sed 1q | awk '{print $6}')
			#read img_width img_height < <(calculateWH "/tmp/$url")
			#echo "<p>Image Loaded. $img_width $img_height $url</p>" >> /tmp/addToDisplay
			#echo "<img src='/tmp/$url' alt='Nitter-Img' width='$img_width px' height='$img_height px'>" | sed 's/‘//g' | sed 's/’//g' >> /tmp/addToDisplay
		#fi
    elif [[ "$line" =~ "https://www.youtube.com/watch?v=" ]]; then
		echo "<p> $line </p>" >> /tmp/infoHeader
		url="$(echo $line | sed 's;.*https://www.youtube.com/watch?v=;;' | sed 's;".*;;')"
		if ! [[ -z $url ]]; then
			link=$(yt-dlp --get-thumbnail "https://www.youtube.com/watch?v=$url")
			imgfile=$((wget $link) 2>&1 | grep "saved" | sed 1q | awk '{print $6}' | sed 's/‘//g' | sed 's/’//g')
			cleanfile=$(echo $imgfile | sed -n 's/.*\.\([^0-9.]\|$\)/\1/p' | sed 's/\.[0-9]*$//' | sed 's/‘//g' | sed 's/’//g')
			# W3M cant display .webp cause it uses img2sixel. So just convert to jpg.
			if [[ "$cleanfile" =~ "webp" ]]; then
				convert "/tmp/$imgfile" "/tmp/$url.jpg"
				cleanfile=$(echo "jpg")
				read img_width img_height < <(calculateWH "/tmp/$url.$cleanfile")
				echo "<p>Webp Image Loaded.</p>" >> /tmp/addToDisplay
				echo "<img src='/tmp/$url.$cleanfile' alt='Yt-thumbnail-used-to-be-webp' width='$img_width px' height='$img_height px'>" | sed 's/‘//g' | sed 's/’//g' >> /tmp/addToDisplay
			else
				cp "/tmp/$imgfile" "/tmp/$url.$cleanfile"
				read img_width img_height < <(calculateWH "/tmp/$url.$cleanfile")
				echo "<p>Image Loaded.</p>" >> /tmp/addToDisplay
				echo "<img src='/tmp/$url.$cleanfile' alt='Yt-thumbnail' width='$img_width px' height='$img_height px'>" | sed 's/‘//g' | sed 's/’//g' >> /tmp/addToDisplay
			fi
		fi
    elif [[ "$line" =~ "https://xkcd.com/" ]]; then
        echo "<p> $line </p>" >> /tmp/infoHeader
		url=$(curl $line 2>/dev/null | $PUP 'img attr{src}' | sed -ne '3{p;q}' | sed 's;^//;;')
		# some sed implementations can not handle multiple scripts, even with -e. Also, the speed is the same
		if ! [[ -z $url ]]; then
			imgfile=$((wget -nc $url) 2>&1 | grep "saved" | sed 1q | awk '{print $6}')
			localfile=$(echo $url | sed 's/.*\///')
			read img_width img_height < <(calculateWH "/tmp/$localfile")
			echo "<img src='/tmp/$localfile' alt='SPACCEEEPIC' width='$img_width px' height='$img_height px'>" | sed 's/‘//g' | sed 's/’//g' >> /tmp/addToDisplay
		fi
    elif [[ "$line" =~ "https://apod.nasa.gov/apod/" ]]; then
        echo "<p> $line </p>" >> /tmp/infoHeader
		url=$(curl $line 2>/dev/null | $PUP 'img attr{src}' 2>/dev/null)
		if ! [[ -z $url ]]; then
			imgfile=$((wget -nc "https://apod.nasa.gov/$url") 2>&1 | grep "saved" | sed 1q | awk '{print $6}')
			echo "<p>Image Loaded.</p>" >> /tmp/addToDisplay
			localfile=$(echo $url | sed 's/.*\///')
			read img_width img_height < <(calculateWH "/tmp/$localfile")
			echo "<img src='/tmp/$localfile' alt='SPACCEEEPIC' width='$img_width px' height='$img_height px'>" | sed 's/‘//g' | sed 's/’//g' >> /tmp/addToDisplay
		fi
	elif [[ "$line" =~ "https://preview.redd.it/" ]]; then
        echo "<p> $line </p>" >> /tmp/infoHeader
        # REDDIT PREVIEW PIC
        url=$(echo "$line" | $PUP 'img attr{src}')
        if ! [[ -z $url ]]; then
			# Use sed to replace &amp; with &
			url=$(echo "$url" | sed 's/&amp;/\&/g')
			imgfile=$( (wget --header="Accept: image/png" -nc "$url") 2>&1 | grep "saved" | sed 1q | awk '{print $6}' | sed 's/‘//g' | sed 's/’//g')
			echo "<p>Image Loaded.</p>" >> /tmp/addToDisplay
			localfile=$(echo "$url" | sed 's/.*\///')
			# Original filename
			# Use parameter expansion to remove everything after the first ?
			new_filename="${localfile%%\?*}"
			mv $localfile "$new_filename"
			localfile="$new_filename"
			read img_width img_height < <(calculateWH "/tmp/$localfile")
			echo "<img src='/tmp/$localfile' alt='Reddit-Preview-Pic' width='$img_width px' height='$img_height px'>" | sed 's/‘//g' | sed 's/’//g' >> /tmp/addToDisplay
		fi
    else
    	if [[ "$lineNr" -eq 1 ]]; then
    	    echo "$line <br>" > /tmp/infoHeader
    	else
    	    echo "$line <br>" >> /tmp/infoHeader
    	fi
    fi
    let "lineNr=lineNr+1"
done < $1 1>/dev/null &
echo "<head><meta http-equiv="refresh" content="6"></head>" >> $1
$(sleep 5 && cp /tmp/infoHeader $1 && sed -i 's/<meta http-equiv=refresh content=6>//g' $1 && cat /tmp/addToDisplay 1>> $1 2>/dev/null) &
/usr/bin/w3m -T text/html -sixel -o ext_image_viewer=0 "$1"
#/usr/bin/w3m -sixel -o ext_image_viewer=0 "$1" 